"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[8454],{8346:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=t(4848),r=t(8453);const s={sidebar_position:6},d="Spring MVC",o={id:"tutorial/spring-mvc",title:"Spring MVC",description:"Spring Boot - Spring MVC Form Data Binding - Text Fields",source:"@site/docs/tutorial/spring-mvc.md",sourceDirName:"tutorial",slug:"/tutorial/spring-mvc",permalink:"/java-spring-boot-notes/docs/tutorial/spring-mvc",draft:!1,unlisted:!1,editUrl:"https://github.com/kotran222/java-spring-boot-notes/docs/tutorial/spring-mvc.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"REST API Security",permalink:"/java-spring-boot-notes/docs/tutorial/rest-api-security"},next:{title:"Spring MVC CRUD",permalink:"/java-spring-boot-notes/docs/tutorial/spring-mvc-crud"}},l={},a=[{value:"Spring Boot - Spring MVC Form Data Binding - Text Fields",id:"spring-boot---spring-mvc-form-data-binding---text-fields",level:2},{value:"Show Form - Add Model Attribute",id:"show-form---add-model-attribute",level:3},{value:"Setting up HTML Form - Data Binding",id:"setting-up-html-form---data-binding",level:3},{value:"Handling Form Submission in the Controller",id:"handling-form-submission-in-the-controller",level:3},{value:"Spring Boot - Spring MVC Form - Drop Down List",id:"spring-boot---spring-mvc-form---drop-down-list",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"spring-mvc",children:"Spring MVC"})}),"\n",(0,i.jsx)(n.h2,{id:"spring-boot---spring-mvc-form-data-binding---text-fields",children:"Spring Boot - Spring MVC Form Data Binding - Text Fields"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/darbyluv2code/spring-boot-3-spring-6-hibernate-for-beginners/tree/main/06-spring-boot-spring-mvc/07-form-data-binding-textfields",children:"https://github.com/darbyluv2code/spring-boot-3-spring-6-hibernate-for-beginners/tree/main/06-spring-boot-spring-mvc/07-form-data-binding-textfields"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Binding"}),": automatically setting / retrieving data from a Java object / bean."]}),"\n",(0,i.jsxs)(n.li,{children:["Showing a Form","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Within the Spring Controller,","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["there must be a ",(0,i.jsx)(n.em,{children:"model attribute"})," which is a bean that will hold form data for the data binding."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Development Process Example:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create Student Class"}),"\n",(0,i.jsx)(n.li,{children:"Create Student controller class"}),"\n",(0,i.jsx)(n.li,{children:"Create HTML Form"}),"\n",(0,i.jsx)(n.li,{children:"Create form processing code"}),"\n",(0,i.jsx)(n.li,{children:"Create confirmation page"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"show-form---add-model-attribute",children:"Show Form - Add Model Attribute"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'@GetMapping("/showStudentForm")\npublic String showForm(Model theModel) {\n    theModel.addAttribute("student", new Student());\n    return "student-form";\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"setting-up-html-form---data-binding",children:"Setting up HTML Form - Data Binding"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'<form th:action="@{/processStudentForm}" th:object="${student}" method="POST">\n    First name: <input type="text" th:field="*{firstName}" />\n\n    <br><br>\n\n    Last name: <input type="text" th:field="*{lastName}" />\n\n    <br><br>\n\n    <input type="submit" value="Submit" />\n</form>\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Refer to ",(0,i.jsx)(n.a,{href:"/docs/tutorial/spring-mvc#show-form---add-model-attribute",children:"Show Form - Add Model Attribute"})," code snippet as well."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'th:object="${student}"'})," is the name of the model attribute.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Recall the name of the model attribute is defined as student: ",(0,i.jsx)(n.code,{children:'theModel.addAttribute("student", new Student());'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"*{...}"})," is shortcut syntax in thymeleaf. Examples:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"*{firstName}"})," means ",(0,i.jsx)(n.code,{children:"${student.firstName}"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When the form is loaded, Spring MVC will read from the model: ",(0,i.jsx)(n.code,{children:"student.getFirstName()"})]}),"\n",(0,i.jsxs)(n.li,{children:["When form is submitted, Spring MVC will create a new Student instance and add to the model: ",(0,i.jsx)(n.code,{children:"student.setFirstName(\u2026)"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"*{lastName}"})," means ",(0,i.jsx)(n.code,{children:"${student.lastName}"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When the form is loaded, Spring MVC will read from the model: ",(0,i.jsx)(n.code,{children:"student.getLastName()"})]}),"\n",(0,i.jsxs)(n.li,{children:["When form is submitted, Spring MVC will create a new Student instance and add to the model: ",(0,i.jsx)(n.code,{children:"student.setLastName(\u2026)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"handling-form-submission-in-the-controller",children:"Handling Form Submission in the Controller"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'@PostMapping("/processStudentForm")\npublic String processForm(@ModelAttribute("student") Student theStudent) {\n    // log the input data\n    System.out.println("theStudent: " + theStudent.getFirstName()\n        + " " + theStudent.getLastName());\n    return "student-confirmation";\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'<html>\n  <body>\n    The student is confirmed:{" "}\n    <span th:text="${student.firstName} + \' \' + ${student.lastName}" />\n  </body>\n</html>\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"${student.firstName}"})," calls ",(0,i.jsx)(n.code,{children:"student.getFirstName()"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"${student.lastName}"})," calls ",(0,i.jsx)(n.code,{children:"student.getLastName()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"spring-boot---spring-mvc-form---drop-down-list",children:"Spring Boot - Spring MVC Form - Drop Down List"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);