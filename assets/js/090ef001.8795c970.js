"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[8660],{8053:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var s=r(4848),i=r(8453);const t={sidebar_position:8},l="Spring MVC Security",o={id:"tutorial/spring-mvc-security",title:"Spring MVC Security",description:"- spring-security-reference-manual",source:"@site/docs/tutorial/spring-mvc-security.md",sourceDirName:"tutorial",slug:"/tutorial/spring-mvc-security",permalink:"/java-spring-boot-notes/docs/tutorial/spring-mvc-security",draft:!1,unlisted:!1,editUrl:"https://github.com/devkobetran/java-spring-boot-notes/docs/tutorial/spring-mvc-security.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Spring MVC CRUD",permalink:"/java-spring-boot-notes/docs/tutorial/spring-mvc-crud"},next:{title:"JPA | Hibernate Advanced Mappings",permalink:"/java-spring-boot-notes/docs/tutorial/jpa-hibernate-advanced-mappings"}},a={},c=[{value:"Declarative Security",id:"declarative-security",level:2},{value:"Programmatic Security",id:"programmatic-security",level:2},{value:"Spring MVC Security Project Setup",id:"spring-mvc-security-project-setup",level:2},{value:"Development Process",id:"development-process",level:3},{value:"Configuring Basic Security",id:"configuring-basic-security",level:2},{value:"Spring Security - Custom Login Form",id:"spring-security---custom-login-form",level:2},{value:"Context Root / Context Path (Best Practice)",id:"context-root--context-path-best-practice",level:3},{value:"Spring Security - Show Login Error",id:"spring-security---show-login-error",level:2},{value:"Spring Security - Bootstrap Login Page",id:"spring-security---bootstrap-login-page",level:2},{value:"Spring Security - Logout",id:"spring-security---logout",level:2},{value:"Display User ID and Roles",id:"display-user-id-and-roles",level:2},{value:"Restrict Access Based on Roles",id:"restrict-access-based-on-roles",level:2},{value:"Restrict Path to EMPLOYEE",id:"restrict-path-to-employee",level:3},{value:"Restrict Path /leaders to MANAGER",id:"restrict-path-leaders-to-manager",level:3},{value:"Altogether Example",id:"altogether-example",level:3},{value:"Custom Access Denied Page",id:"custom-access-denied-page",level:2},{value:"Display Content Based on Roles",id:"display-content-based-on-roles",level:2},{value:"Spring Security User Accounts Stored in Database",id:"spring-security-user-accounts-stored-in-database",level:2},{value:"Spring Security Password Encryption",id:"spring-security-password-encryption",level:2},{value:"Spring Security Custom Tables",id:"spring-security-custom-tables",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spring-mvc-security",children:"Spring MVC Security"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.spring.io/spring-security/reference/",children:"spring-security-reference-manual"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"declarative-security",children:"Declarative Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Define application\u2019s security constraints in configuration","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All Java config: @Configuration"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Provides separation of concerns between application code and security"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"programmatic-security",children:"Programmatic Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Spring Security provides an API for custom application coding"}),"\n",(0,s.jsx)(n.li,{children:"Provides greater customization for specific app requirements"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spring-mvc-security-project-setup",children:"Spring MVC Security Project Setup"}),"\n",(0,s.jsx)(n.h3,{id:"development-process",children:"Development Process"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create project at Spring Initializr website","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add Maven dependencies for Spring MVC Web App, Security, Thymeleaf"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-thymeleaf</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-security</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.thymeleaf.extras</groupId> <artifactId>thymeleaf-extras-springsecurity6</artifactId>\n    </dependency>\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Develop our Spring controller"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Controller\npublic class DemoController {\n    @GetMapping("/")\n    public String showHome() {\n        // this home corresponds to home.html\n        return "home";\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Develop our Thymeleaf view page\n",(0,s.jsx)(n.strong,{children:"src/main/resources/templates/home.html"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<html>\n  <body>\n    Welcome to the luv2code company home page!\n  </body>\n</html>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuring-basic-security",children:"Configuring Basic Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Look at rest-api-security"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spring-security---custom-login-form",children:"Spring Security - Custom Login Form"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Modify Spring Security Configuration to reference custom login form"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DemoSecurityConfig.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'//Configure security of web paths in application, login, logout etc\n\n@Bean\npublic SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n    http.authorizeHttpRequests(configurer ->\n                    // Any request to the app must be authenticated\n                    configurer\n                            .anyRequest().authenticated()\n            )\n            .formLogin(form ->\n                //customizing the form login process\n                form\n                    .loginPage("/showMyLoginPage")\n                    .loginProcessingUrl("/authenticateTheUser")\n                    .permitAll()\n            );\n\n    return http.build();\n}\n\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"http.authorizeHttpRequests"})," restrict access based on the HTTP request"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'.loginPage("/showMyLoginPage")'}),' will show the custom form at the request mapping "/showMyLoginPage"',"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This will be linked up with the Controller in step 2."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'.loginProcessingUrl("/authenticateTheUser")'})," Login form should POST data to this URL for processing (check user id and password). Also, no Controller Request Mapping required to be defined. This is done automatically here."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".permitAll()"})," allows everyone to see the login page, no need to be logged in."]}),"\n"]})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Develop a Controller to show the custom login form"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"LoginController.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Controller\npublic class LoginController {\n    @GetMapping("/showMyLoginPage")\n    public String showMyLoginPage() {\n        //thymeleaf UI\n        return "plain-login";\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Create custom login form","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"HTML (CSS optional)"}),"\n",(0,s.jsxs)(n.li,{children:["Send data to login processing URL: ",(0,s.jsx)(n.code,{children:"/authenticateTheUser"})]}),"\n",(0,s.jsx)(n.li,{children:"Login processing URL will be handled by Spring Security Filters"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Spring Security defines default names for login form fields","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["User name field: ",(0,s.jsx)(n.strong,{children:"username"})]}),"\n",(0,s.jsxs)(n.li,{children:["Password field: ",(0,s.jsx)(n.strong,{children:"password"})]}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<form action="#" th:action="@{/authenticateTheUser}" method="POST">\n  <p>User name: <input type="text" name="username" /></p>\n  <p>Password: <input type="password" name="password" /></p>\n  <input type="submit" value="Login" />\n</form>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"context-root--context-path-best-practice",children:"Context Root / Context Path (Best Practice)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Context Path = Context Root"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The root path for your web app"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"th:action=@{...}"})," will give access to context path dynamically"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Helps to keep links relative to application context path"}),"\n",(0,s.jsx)(n.li,{children:"If you change context path of app, then links will still work"}),"\n",(0,s.jsx)(n.li,{children:"Better than hard-coding the context path"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spring-security---show-login-error",children:"Spring Security - Show Login Error"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When login fails, by default Spring Security will","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Send user back to your login page"}),"\n",(0,s.jsxs)(n.li,{children:["Append an error parameter: ",(0,s.jsx)(n.strong,{children:"?error"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Development Process"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Modify custom login form","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check the error parameter"}),"\n",(0,s.jsx)(n.li,{children:"If error parameter exists, show an error message"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<form>\n  ...\n\n  \x3c!-- http://localhost:8080/myapp/showMyLoginPage?error --\x3e\n  <div th:if="${param.error}">\n    <i>Sorry! You entered invalid username/password.</i>\n  </div>\n\n  <p>User name: <input type="text" name="username" /></p>\n\n  <p>Password: <input type="password" name="password" /></p>\n</form>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"spring-security---bootstrap-login-page",children:"Spring Security - Bootstrap Login Page"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Modify form to point to our login processing URL"}),"\n",(0,s.jsx)(n.li,{children:"Verify form fields for username and password"}),"\n",(0,s.jsx)(n.li,{children:"Change our controller to use our new Bootstrap login form"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"spring-security---logout",children:"Spring Security - Logout"}),"\n",(0,s.jsx)(n.p,{children:"When a logout is processed, by default Spring Security will"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Invalidate user\u2019s HTTP session and remove session cookies, etc"}),"\n",(0,s.jsx)(n.li,{children:"Send user back to your login page"}),"\n",(0,s.jsxs)(n.li,{children:["Append a logout parameter: ",(0,s.jsx)(n.strong,{children:"?logout"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Add logout support to Spring Security Configuration"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DemoSecurityConfig.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Bean\npublic SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n    http.authorizeHttpRequests(configurer ->\n                    configurer\n                            .anyRequest().authenticated()\n            )\n            .formLogin(form ->\n                    form\n                            .loginPage("/showMyLoginPage")\n                            .loginProcessingUrl("/authenticateTheUser")\n                            .permitAll()\n            )\n   .logout(logout -> logout.permitAll()\n   );\n    return http.build();\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"   .logout(logout -> logout.permitAll());"}),' will add logout support for default URL "/logout"']}),"\n"]})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add logout button to home page"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Send data to default logout URL: ",(0,s.jsx)(n.strong,{children:"/logout"})]}),"\n",(0,s.jsx)(n.li,{children:"Logout URL will be handled by Spring Security Filters"}),"\n",(0,s.jsx)(n.li,{children:"Must use POST method"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<form action="#" th:action="@{/logout}" method="POST">\n  <input type="submit" value="Logout" />\n</form>\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Must use POST request for logout"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Update login form to display \u201clogged out\u201d message"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check the logout parameter"}),"\n",(0,s.jsx)(n.li,{children:'If logout parameter exists, show "logged out" message'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"plain-login.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'...\n<form ... th:action="..." method="...">\n  \x3c!-- http://localhost:8080/showMyLoginPage?logout --\x3e\n  <div th:if="${param.logout}">\n    <i>You have been logged out.</i>\n  </div>\n  User name: <input type="text" name="username" />\n\n  Password: <input type="password" name="password" />\n</form>\n...\n'})}),"\n",(0,s.jsx)(n.h2,{id:"display-user-id-and-roles",children:"Display User ID and Roles"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Display User ID"}),"\n",(0,s.jsx)(n.li,{children:"Display User Roles"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"home.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<body>\n  ...\n\n  \x3c!-- display user id --\x3e\n  <p>User: <span sec:authentication="principal.username"></span>;</p>\n\n  \x3c!-- display user roles --\x3e\n  <p>Role(s): <span sec:authentication="principal.authorities"></span></p>\n</body>\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:'Role(s): <span sec:authentication="principal.authorities"></span>'})," will output with a ",(0,s.jsx)(n.code,{children:'"ROLE_"'})," prefix"]}),(0,s.jsxs)(n.p,{children:["i.g. ",(0,s.jsx)(n.code,{children:"[ROLE_EMPLOYEE]"})]})]}),"\n",(0,s.jsx)(n.h2,{id:"restrict-access-based-on-roles",children:"Restrict Access Based on Roles"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Development Process"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create supporting controller code and view pages"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"home.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<body>\n  \x3c!-- Add a link to point to /leaders ... this is for the managers --\x3e\n  <p>\n    <a th:href="@{/leaders}">Leadership Meeting</a>\n  </p>\n\n  \x3c!-- Add a link to point to /systems ... this is only for the admins --\x3e\n  <p>\n    <a th:href="@{/systems}">IT System Meeting</a>\n  </p>\n</body>\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DemoController.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'public class DemoController{\n  ...\n\n  // add a request mapping for /leaders\n  @GetMapping("/leaders")\n  public String showLeaders(){\n    //render thymeleaf UI\n    return "leaders";\n  }\n\n  // add a request mapping for /systems\n  @GetMapping("/systems")\n  public String showSystems(){\n    //render thymeleaf UI\n    return "systems";\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"leaders.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<h2>Leaders Home Page</h2>\n<p>Put whatever Leaders info here</p>\n\n<a th:href="@{/}">Back to Home Page</a>\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"systems.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<h2>Systems Home Page</h2>\n<p>Put whatever Systems info here</p>\n\n<a th:href="@{/}">Back to Home Page</a>\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Restrict Access based on Roles"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Update your Spring Security Java configuration file (.java)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"requestMatchers(<< add path to match on >>).hasAnyRole(<< list of authorized roles >>)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"list of authorized roles"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'"ADMIN"'}),"\n",(0,s.jsx)(n.li,{children:'"DEVELOPER"'}),"\n",(0,s.jsx)(n.li,{children:'"VIP"'}),"\n",(0,s.jsx)(n.li,{children:'"PLATINUM"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"restrict-path-to-employee",children:"Restrict Path to EMPLOYEE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'requestMatchers("/").hasRole("EMPLOYEE");\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'requestMatchers("/")'}),' matches on root path: "/"']}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"restrict-path-leaders-to-manager",children:"Restrict Path /leaders to MANAGER"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'requestMatchers("/leaders/**").hasRole("MANAGER");\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'This one matches on path: "/leaders" and all sub-directories (**)'}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"altogether-example",children:"Altogether Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Bean\npublic SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n    http.authorizeHttpRequests(configurer ->\n                    configurer\n                            .requestMatchers("/").hasRole("EMPLOYEE")\n                            .requestMatchers("/leaders/**").hasRole("MANAGER")\n                            .requestMatchers("/systems/**").hasRole("ADMIN")\n                            .anyRequest().authenticated()\n            )\n...\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-access-denied-page",children:"Custom Access Denied Page"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Configure custom page for access denied"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DemoSecurityConfig.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Bean\npublic SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n    http.authorizeHttpRequests(configurer ->\n                    configurer\n                            .requestMatchers(\u201c/").hasRole("EMPLOYEE")\n                            ...\n           )\n            .exceptionHandling(configurer ->\n                configurer\n                    .accessDeniedPage("/access-denied")\n   );\n  ...\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Create supporting controller code and view page"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"LoginController.java"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Controller\npublic class LoginController {\n  ...\n\n  //add request mapping for /access_denied\n  @GetMapping("/access-denied")\n  public String showAccessDenied(){\n    return "access-denied";\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"access-denied.html"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<body>\n  <h2>Access Denied - You can write any unauthorized access comment here</h2>\n\n  <a th:href="@{/}">Back to Home Page</a>\n</body>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"display-content-based-on-roles",children:"Display Content Based on Roles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Example: Only show this section for users with MANAGER role and ADMIN ROLE"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'...\n\n<div sec:authorize="hasRole(\'MANAGER\')">\n  <p>\n    <a th:href="@{/leaders}"> Leadership Meeting </a>\n  </p>\n</div>\n\n<div sec:authorize="hasRole(\'ADMIN\')">\n  <p>\n    <a th:href="@{/systems}"> IT Systems Meeting </a>\n  </p>\n</div>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"spring-security-user-accounts-stored-in-database",children:"Spring Security User Accounts Stored in Database"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Spring Security can read user account info from database"}),"\n",(0,s.jsxs)(n.li,{children:["Have to follow Spring Security\u2019s predefined table schemas","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Can also customize the table schemas"}),"\n",(0,s.jsx)(n.li,{children:"Useful if you have custom tables specific to your project / custom"}),"\n",(0,s.jsxs)(n.li,{children:["You will be responsible for developing the code to access the data","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JDBC, JPA/Hibernate"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Develop SQL Script to set up database tables"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"CREATE TABLE `users` (\n  `username` varchar(50) NOT NULL,\n  `password` varchar(50) NOT NULL,\n  `enabled` tinyint NOT NULL,\n  PRIMARY KEY (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\nCREATE TABLE `authorities` (\n  `username` varchar(50) NOT NULL,\n  `authority` varchar(50) NOT NULL,\n  UNIQUE KEY `authorities_idx_1` (`username`,`authority`),\n  CONSTRAINT `authorities_ibfk_1`\n  FOREIGN KEY (`username`)\n  REFERENCES `users` (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n\x3c!-- 'authorities' is the same as 'roles' --\x3e\n\x3c!-- Internally Spring Security uses \u201cROLE_\u201d prefix --\x3e\nINSERT INTO `authorities`\nVALUES\n('john','ROLE_EMPLOYEE'),\n('mary','ROLE_EMPLOYEE'),\n('mary','ROLE_MANAGER'),\n('susan','ROLE_EMPLOYEE'),\n('susan','ROLE_MANAGER'),\n('susan','ROLE_ADMIN');\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Add database support to Maven POM file"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n\n\x3c!-- MySQL --\x3e\n<dependency>\n  <groupId>com.mysql</groupId>\n  <artifactId>mysql-connector-j</artifactId>\n  <scope>runtime</scope>\n</dependency>\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Create JDBC properties file"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"application.properties"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"#\n# JDBC connection properties\n#\nspring.datasource.url=jdbc:mysql://localhost:3306/employee_directory\nspring.datasource.username=springstudent\nspring.datasource.password=springstudent\n\n\n#\n# Log JDBC SQL statements\n#\n# Only use this for dev/testing\n# Do not use for production since it will log user names\nlogging.level.org.springframework.jdbc.core=TRACE\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Update Spring Security Configuration to use JDBC"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@Configuration\npublic class DemoSecurityConfig {\n    //Inject data source, Auto-configured by Spring Boot\n    @Bean\n    public UserDetailsManager userDetailsManager(DataSource dataSource) {\n      //Tell Spring Security to use JDBC authentication with our data source\n      return new JdbcUserDetailsManager(dataSource);\n    }\n    ...\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"spring-security-password-encryption",children:"Spring Security Password Encryption"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"use bcrypt as described in REST API Security."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run SQL Script that contains encrypted passwords"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"INSERT INTO `users`\nVALUES\n(\u2018john','{bcrypt}$2a$10$qeS0HEh7urweMojsnwNAR.vcXJeXR1UcMRZ2WcGQl9YeuspUdgF.q',1),\n('mary','{bcrypt}$2a$04$eFytJDGtjbThXa80FyOOBuFdK2IwjyWefYkMpiBEFlpBwDH.5PM0K',1),\n('susan','{bcrypt}$2a$04$eFytJDGtjbThXa80FyOOBuFdK2IwjyWefYkMpiBEFlpBwDH.5PM0K',1);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Modify DDL for password field, length should be 68"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"CREATE TABLE `users` (\n  `username` varchar(50) NOT NULL,\n  `password` char(68) NOT NULL,\n  `enabled` tinyint NOT NULL,\n  PRIMARY KEY (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"The password from db is NEVER decrypted"}),(0,s.jsx)(n.p,{children:"Because bcrypt is a one-way encryption algorithm"})]}),"\n",(0,s.jsx)(n.h2,{id:"spring-security-custom-tables",children:"Spring Security Custom Tables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tell Spring how to query your custom tables"}),"\n",(0,s.jsx)(n.li,{children:"Provide query to find user by user name"}),"\n",(0,s.jsx)(n.li,{children:"Provide query to find authorities / roles by user name"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Development Process"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create our custom tables with SQL"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"CREATE TABLE `members` (\n  `user_id` varchar(50) NOT NULL,\n  `pw` char(68) NOT NULL,\n  `active` tinyint NOT NULL,\n  PRIMARY KEY (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\nCREATE TABLE `roles` (\n  `user_id` varchar(50) NOT NULL,\n  `role` varchar(50) NOT NULL,\n  UNIQUE KEY `authorities5_idx_1` (`user_id`, `role`),\n  CONSTRAINT `authorities5_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `members` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Update Spring Security Configuration","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provide query to find user by user name"}),"\n",(0,s.jsx)(n.li,{children:"Provide query to find authorities / roles by user name"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'@Configuration\npublic class DemoSecurityConfig {\n    @Bean\n    public UserDetailsManager userDetailsManager(DataSource dataSource) {\n        JdbcUserDetailsManager theUserDetailsManager = new JdbcUserDetailsManager(dataSource);\n        theUserDetailsManager\n           .setUsersByUsernameQuery("select user_id, pw, active from members where user_id=?");\n\n        theUserDetailsManager\n           .setAuthoritiesByUsernameQuery("select user_id, role from roles where user_id=?");\n        return theUserDetailsManager;\n    }\n ...\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Question mark \u201c?\u201d"}),(0,s.jsx)(n.p,{children:"Parameter value will be the user name from login"})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var s=r(6540);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);